#!/bin/sh
opendkim_home=/var/lib/opendkim
pidfile=/var/run/opendkim/opendkim.pid
keep_keys_count=5
create_keys_age_days=30
delete_keys_age_days=90

get_keys() {
    find ./keys -maxdepth 1 -type f -name "$1-$2-*.txt" | sed -nr "s|\./keys/$1-$2-(.*).txt|\1|p" | sort
}

count_keys() {
    get_keys "$1" "$2" | wc -w
}

key_age() {
    key_timestamp="$(date -d "$1" +%s)"
    today_timestamp="$(date +%s)"
    key_age_seconds="$((today_timestamp - key_timestamp))"
    key_age_days="$((key_age_seconds/86400))"
    echo "$key_age_days"
}

create_key() {
    today_date="$(date +%Y-%m-%d)"
    opendkim-genkey --hash-algorithms=sha256 --bits=2048 \
                    --domain="$1" --append-domain --subdomains --restrict \
                    --selector="$2-$today_date"
    mv $2-$today_date.txt ./keys/$1-$2-$today_date.txt
    mv $2-$today_date.private ./keys/$1-$2-$today_date.private
    chown opendkim:opendkim ./keys/*
}

delete_key() {
    echo "$2-$3._domainkey.$1" >> invalid_keys.txt
    rm -f "./keys/$1-$2-$3.txt"
    rm -f "./keys/$1-$2-$3.private"
}

cd "$opendkim_home"

: > SigningTable.new
: > KeyTable.new

domains="$(cat domains.txt 2>/dev/null)"
prefix="$(cat prefix.txt 2>/dev/null)"

for domain in $domains; do
    key="$(get_keys "$domain" "$prefix" | tail -n1)"
    if [ -z "$key" ] || [ $(key_age "$key") -gt $create_keys_age_days ]; then
        create_key "$domain" "$prefix"
    fi
    while [ $(count_keys "$domain" "$prefix") -gt $keep_keys_count ]; do
       key="$(get_keys "$domain" "$prefix" | head -n1)"
       [ $(key_age $key) -lt $delete_keys_age_days ] && break
       delete_key "$domain" "$prefix" "$key"
    done
    key="$(get_keys "$domain" "$prefix" | tail -n2 | head -n1)"
    echo "*@$domain $domain-$prefix-$key" >> SigningTable.new
    echo "$domain-$prefix-$key $domain:$prefix-$key:$opendkim_home/keys/$domain-$prefix-$key.private" >> KeyTable.new
done

mv KeyTable.new KeyTable
mv SigningTable.new SigningTable
[ -f "$pidfile" ] && kill -USR1 $(cat "$pidfile")
